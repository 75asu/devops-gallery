FROM golang:latest as builder
# Set the Current Working Directory inside the container
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source from the current directory to the Working Directory inside the container
COPY . .

# build it, name it as main and store in current working directory
RUN go build -o main .

EXPOSE 80
ENTRYPOINT ["./main"]

######## Start a new stage from scratch #######
# FROM gcr.io/distroless/static-debian11
# WORKDIR /root/

# # Copy the Pre-built binary file from the previous stage
# COPY --from=builder /app/main ./
# # Expose port 8080 to the outside world
# EXPOSE 80

# # Command to run the executable
# CMD [ "main" ]  